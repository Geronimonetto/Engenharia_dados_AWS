# -*- coding: utf-8 -*-
"""Etapa_04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lftob7-Uoj3db-iKj27cM0dH9ySk9hL9
"""

!pip install pyspark

from pyspark.sql import SparkSession
from pyspark.sql.functions import when, rand, element_at, lit, count
from random import randint

spark = SparkSession \
    .builder \
    .master("local[*]") \
    .appName("Exercicio Intro") \
    .getOrCreate()

df_nomes = spark.read.csv('nomes_aleatorios.txt')

df_nomes.show(5)

df_nomes.printSchema()

df_nomes = df_nomes.withColumnRenamed('_c0','Nomes')
df_nomes.printSchema()

df_nomes.show(10)

escolaridade_aleatorio = ['Fundamental','Medio','Superior']

df_nomes = df_nomes.withColumn(
    "Escolaridade",
    when(rand() < 0.30, escolaridade_aleatorio[0])
    .when((rand() >= 0.30) & (rand() < 0.60), escolaridade_aleatorio[1])
    .otherwise(escolaridade_aleatorio[2])
)

df_nomes.show(5)

paises = [ "Argentina", "Brasil", "Venezuela", "Peru", "Chile", "Equador", "Bolívia", "Paraguai", "Uruguai", "Colômbia", "Suriname", "Guiana", "Guiana Francesa"]

df_nomes = df_nomes.withColumn("Pais", element_at(lit(paises), (rand()*13 + 1).cast("int")))

df_nomes.show(5)

df_nomes = df_nomes.withColumn("AnoNascimento", (lit(2010) - (rand()*66).cast("int")))

df_nomes.show(20)

df_select = df_nomes.select("Nomes").filter("AnoNascimento>=2000").show(10)

df_nomes.createOrReplaceTempView ("pessoas")

spark.sql("select Nomes from pessoas where AnoNascimento >=2000").show(10)

spark.sql("select count(Nomes) as Millennials from pessoas where AnoNascimento between 1980 and 1994").show(10)

df_nomes_filtrados = df_nomes.select("Nomes").filter("AnoNascimento >= 1980").filter("AnoNascimento<=1994")

df_nomes_filtrados.select(count("Nomes")).show()

df_filtado_pais_ano = """
    SELECT Pais,
           CASE
               WHEN AnoNascimento BETWEEN 1944 AND 1964 THEN 'Baby Boomers'
               WHEN AnoNascimento BETWEEN 1965 AND 1979 THEN 'Geração X'
               WHEN AnoNascimento BETWEEN 1980 AND 1994 THEN 'Millennials'
               WHEN AnoNascimento BETWEEN 1995 AND 2015 THEN 'Geração Z'
               ELSE 'Outra Geração'
           END AS Geracao,
           COUNT(*) AS Quantidade
    FROM pessoas
    GROUP BY Pais, Geracao
    ORDER BY Pais, Geracao, Quantidade
"""

resultado = spark.sql(df_filtado_pais_ano).show()